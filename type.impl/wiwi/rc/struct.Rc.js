(function() {
    var type_impls = Object.fromEntries([["wiwi",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Rc%3CC,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#159-169\">Source</a><a href=\"#impl-Clone-for-Rc%3CC,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, V, S&gt; <a class=\"trait\" href=\"wiwi/prelude_std/trait.Clone.html\" title=\"trait wiwi::prelude_std::Clone\">Clone</a> for <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#163-168\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wiwi/prelude_std/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new strong pointer to the same allocation,\nincrementing the strong count</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wiwi/prelude_std/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"wiwi/prelude_std/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-Rc%3CC,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#171-185\">Source</a><a href=\"#impl-Drop-for-Rc%3CC,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, V, S&gt; <a class=\"trait\" href=\"wiwi/prelude_std/trait.Drop.html\" title=\"trait wiwi::prelude_std::Drop\">Drop</a> for <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#173-184\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wiwi/prelude_std/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"wiwi/prelude_std/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rc%3CC,+(),+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#54-65\">Source</a><a href=\"#impl-Rc%3CC,+(),+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, S&gt; <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_array_into_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#62-64\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.from_array_into_slice\" class=\"fn\">from_array_into_slice</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[S; N]</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a reference counter from an array, storing it in the <code>slice</code> field\nand erasing the array length from the type</p>\n<p>If you want to keep the const length of the array, you should use\n<a href=\"wiwi/rc/struct.Rc.html#method.from_value\" title=\"associated function wiwi::rc::Rc::from_value\"><code>from_value</code></a> instead. The memory usage of the RC\nallocation actually does not differ between these two.</p>\n</div></details></div></details>",0,"wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rc%3CC,+(),+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#67-78\">Source</a><a href=\"#impl-Rc%3CC,+(),+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, S: <a class=\"trait\" href=\"wiwi/prelude_std/trait.Clone.html\" title=\"trait wiwi::prelude_std::Clone\">Clone</a>&gt; <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_clone\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#75-77\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.from_slice_clone\" class=\"fn\">from_slice_clone</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a reference counter from a slice, cloning all elements into the\n<code>slice</code> field</p>\n<p>If your slice contains elements that implement copy, you should use\n<a href=\"wiwi/rc/struct.Rc.html#method.from_slice_copy\" title=\"associated function wiwi::rc::Rc::from_slice_copy\"><code>from_slice_copy</code></a> instead, which can be more\nefficient. (Rust, specialisation when?)</p>\n</div></details></div></details>",0,"wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rc%3CC,+(),+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#80-87\">Source</a><a href=\"#impl-Rc%3CC,+(),+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, S: <a class=\"trait\" href=\"wiwi/prelude_std/trait.Copy.html\" title=\"trait wiwi::prelude_std::Copy\">Copy</a>&gt; <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_copy\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#84-86\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.from_slice_copy\" class=\"fn\">from_slice_copy</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a reference counter from a slice, copying all elements into\nthe <code>slice</code> field</p>\n</div></details></div></details>",0,"wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rc%3CC,+V,+()%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#45-52\">Source</a><a href=\"#impl-Rc%3CC,+V,+()%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, V&gt; <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, V, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_value\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#49-51\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.from_value\" class=\"fn\">from_value</a>(value: V) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a reference counter from a (sized) value, storing it in the <code>value</code>\nfield</p>\n</div></details></div></details>",0,"wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rc%3CC,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#111-118\">Source</a><a href=\"#impl-Rc%3CC,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, V, S: <a class=\"trait\" href=\"wiwi/prelude_std/trait.Copy.html\" title=\"trait wiwi::prelude_std::Copy\">Copy</a>&gt; <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_value_and_slice_copy\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#115-117\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.from_value_and_slice_copy\" class=\"fn\">from_value_and_slice_copy</a>(value: V, slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a reference counter from a value and a slice, copying all\nelements of the slice into the <code>slice</code> field</p>\n</div></details></div></details>",0,"wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rc%3CC,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#120-157\">Source</a><a href=\"#impl-Rc%3CC,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, V, S&gt; <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_value_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#123-126\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.as_value_ref\" class=\"fn\">as_value_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a></h4></section></summary><div class=\"docblock\"><p>Gets an immurable reference to the value stored in the <code>value</code> field</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#130-133\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.as_slice_ref\" class=\"fn\">as_slice_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a></h4></section></summary><div class=\"docblock\"><p>Gets an immurable reference to the slice stored in the <code>slice</code> field</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strong_count\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#137-140\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.strong_count\" class=\"fn\">strong_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the strong pointer count</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.weak_count\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#144-147\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.weak_count\" class=\"fn\">weak_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Gets the weak pointer count</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downgrade\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#151-156\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.downgrade\" class=\"fn\">downgrade</a>(&amp;self) -&gt; <a class=\"struct\" href=\"wiwi/rc/struct.RcWeak.html\" title=\"struct wiwi::rc::RcWeak\">RcWeak</a>&lt;C, V, S&gt;</h4></section></summary><div class=\"docblock\"><p>“Downgrades” this pointer, returning a weak pointer <a href=\"wiwi/rc/struct.RcWeak.html\" title=\"struct wiwi::rc::RcWeak\"><code>RcWeak</code></a> to the data</p>\n</div></details></div></details>",0,"wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rc%3CC,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#89-96\">Source</a><a href=\"#impl-Rc%3CC,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, V, S&gt; <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_value_and_array_into_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#93-95\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.from_value_and_array_into_slice\" class=\"fn\">from_value_and_array_into_slice</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;(\n    value: V,\n    array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[S; N]</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a reference counter from a value and an array, with the array\nbeing stored in the <code>slice</code> field</p>\n</div></details></div></details>",0,"wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rc%3CC,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#98-109\">Source</a><a href=\"#impl-Rc%3CC,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a>, V, S: <a class=\"trait\" href=\"wiwi/prelude_std/trait.Clone.html\" title=\"trait wiwi::prelude_std::Clone\">Clone</a>&gt; <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_value_and_slice_clone\" class=\"method\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#106-108\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wiwi/rc/struct.Rc.html#tymethod.from_value_and_slice_clone\" class=\"fn\">from_value_and_slice_clone</a>(value: V, slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a reference counter from a value and a slice, cloning all\nelements of the slice into the <code>slice</code> field</p>\n<p>If your slice contains elements that implement copy, you should use\n<a href=\"wiwi/rc/struct.Rc.html#method.from_value_and_slice_copy\" title=\"associated function wiwi::rc::Rc::from_value_and_slice_copy\"><code>from_value_and_slice_copy</code></a> instead,\nwhich can be more efficient. (Rust, specialisation when?)</p>\n</div></details></div></details>",0,"wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<section id=\"impl-Send-for-Rc%3CC,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#250\">Source</a><a href=\"#impl-Send-for-Rc%3CC,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a> + <a class=\"trait\" href=\"wiwi/prelude_std/trait.Send.html\" title=\"trait wiwi::prelude_std::Send\">Send</a>, V: <a class=\"trait\" href=\"wiwi/prelude_std/trait.Send.html\" title=\"trait wiwi::prelude_std::Send\">Send</a>, S: <a class=\"trait\" href=\"wiwi/prelude_std/trait.Send.html\" title=\"trait wiwi::prelude_std::Send\">Send</a>&gt; <a class=\"trait\" href=\"wiwi/prelude_std/trait.Send.html\" title=\"trait wiwi::prelude_std::Send\">Send</a> for <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, V, S&gt;</h3></section>","Send","wiwi::rc::RcThread","wiwi::rc::RcAtomic"],["<section id=\"impl-Sync-for-Rc%3CC,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wiwi/rc.rs.html#255\">Source</a><a href=\"#impl-Sync-for-Rc%3CC,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"wiwi/rc/trait.Counter.html\" title=\"trait wiwi::rc::Counter\">Counter</a> + <a class=\"trait\" href=\"wiwi/prelude_std/trait.Sync.html\" title=\"trait wiwi::prelude_std::Sync\">Sync</a>, V: <a class=\"trait\" href=\"wiwi/prelude_std/trait.Sync.html\" title=\"trait wiwi::prelude_std::Sync\">Sync</a>, S: <a class=\"trait\" href=\"wiwi/prelude_std/trait.Sync.html\" title=\"trait wiwi::prelude_std::Sync\">Sync</a>&gt; <a class=\"trait\" href=\"wiwi/prelude_std/trait.Sync.html\" title=\"trait wiwi::prelude_std::Sync\">Sync</a> for <a class=\"struct\" href=\"wiwi/rc/struct.Rc.html\" title=\"struct wiwi::rc::Rc\">Rc</a>&lt;C, V, S&gt;</h3></section>","Sync","wiwi::rc::RcThread","wiwi::rc::RcAtomic"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[19282]}