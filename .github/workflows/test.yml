name: tests
on:
  push:
    branches:
    - "**"

env:
  RUSTFLAGS: "-Cinstrument-coverage -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code"

jobs:
  test:
    name: run
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        featureflags:
        # Make sure to check README and Cargo.toml too
        - clock-timer-2,debounce,h,hex,lazy-wrap,serialiser,string-pool,z85
        # - clock-timer-2,debounce,h,hex,lazy-wrap,serialiser,string-pool,z85,debounce-dyn-fn

        runtimes:
        - tokio

    steps:
    - name: checkout code
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: setup rust
      run: rustc --version

    - name: build
      run: cargo build --verbose --features ${{ matrix.featureflags }} --features ${{ matrix.runtimes }}

    - name: test
      run: cargo test --verbose --features ${{ matrix.featureflags }} --features ${{ matrix.runtimes }}
      env:
        CARGO_INCREMENTAL: "0"
        LLVM_PROFILE_FILE: "target/coverage/test-file.profraw"

    - name: fetch/run grcov
      run: |
        curl -Lo grcov.bz2 https://github.com/mozilla/grcov/releases/download/v0.8.19/grcov-x86_64-unknown-linux-musl.tar.bz2
        tar xvf grcov.bz2
        rm grcov.bz2

        ./grcov . -s . -t lcov --binary-path ./target/debug/ --branch --ignore-not-existing -o ./target/coverage/tests.lcov

    - name: upload to codecov
      uses: codecov/codecov-action@54bcd8715eee62d40e33596ef5e8f0f48dbbccab # v4.1.0
      with:
        files: target/coverage/*.lcov
        token: ${{ secrets.CODECOV_TOKEN }}
