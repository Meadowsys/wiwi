searchState.loadedDescShard("wiwi", 0, "wiwi\nchangelog \nAn interval tracking clock\nA debounced function; or a function that won’t actually …\nDefer some code to run at the end of the current scope\nDefer some code to run at the end of the current scope, …\nDefer some code to run at the end of the current scope, …\nh\nFast and efficient implementation of hex encoding.\nWrapper for initialisation function, initialising it only …\nGeneric, zero-cost struct that wraps data in a newtype, to …\nDeclare a new nominal type (alias), with the provided …\nDeclare many new nominal types (aliases), in a module\nNumber operations exposed as traits, enabling code to be …\nPrelude module, exporting types from enabled features\nGlobal immutable string pool implementation\nImplemetation of Unicode\nCreates a <code>VecChain</code> containing the arguments\nExecutes code with cloned values, so the executed code can …\nFast and efficient implementation of Z85\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSignin flow functions\nSignup flow functions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCall with data received from the client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the encoded byte vector\nWrites the specified amount of bits from the provided u128\nWrites the specified amount of bits from the provided …\nWrites the specified amount of bits from the provided u128\nWrites the specified amount of bits from the provided u16\nWrites the specified amount of bits from the provided u16, …\nWrites the specified amount of bits from the provided u16\nWrites the specified amount of bits from the provided u32\nWrites the specified amount of bits from the provided u32, …\nWrites the specified amount of bits from the provided u32\nWrites the specified amount of bits from the provided u64\nWrites the specified amount of bits from the provided u64, …\nWrites the specified amount of bits from the provided u64\nWrites the specified amount of bits from the provided u8\nWrites the specified amount of bits from the provided u8, …\nWrites the specified amount of bits from the provided u8\nWrites the specified amount of bits from the provided …\nStruct providing a chaining API for [<code>[T; N]</code>]\nThis type’s chainer\nTrait implemented on chainers\nThis chainer’s nonchain\nTrait implemented on the nonchain for chainers\nStruct providing a chaining API for [<code>Box&lt;[T]&gt;</code>]\nStruct providing a chaining API for [<code>&amp;&#39;h mut [T]</code>]\nStruct providing a chaining API for [<code>&amp;&#39;h [T]</code>]\nStruct providing a chaining API for <code>Vec&lt;T&gt;</code>\nTakes and moves all elements from another <code>VecChain</code> into …\nTakes and moves all elements from a <code>Vec</code> into <code>self</code>, leaving …\nBorrows <code>self</code> as its nonchain\nBorrows <code>self</code> as its nonchain\nBorrows <code>self</code> mutably as its nonchain\nBorrows <code>self</code> mutably as its nonchain\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a chainer into it’s nonchain type\nConverts a chainer into it’s nonchain type\nConverts a nonchain type into it’s chainer\nConverts a nonchain type into it’s chainer\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>self</code> into its associated chain type\nConverts <code>self</code> into its associated chain type\nConverts <code>self</code> back into it’s nonchain type\nConverts <code>self</code> back into it’s nonchain type\nWrites <code>true</code> into the output if the vector contains no …\nWrites <code>true</code> into the output if the vector contains no …\nWrites <code>true</code> into the output if the vector contains no …\nWrites <code>true</code> into the output if the vector contains no …\nWrites the number of elements in the vector (the length) …\nWrites the number of elements in the vector (the length) …\nWrites the number of elements in the vector (the length) …\nWrites the number of elements in the vector (the length) …\nCreates a new vector chain without allocating any capacity\nCalls the provided closure with the spare capacity of the …\nTrims off the leading and trailing ASCII whitespace in …\nCreates a <code>VecChain</code> containing the arguments\nCreates a new vector chain, and preallocate some memory\nAn interval tracking clock. Takes a start time, an end …\nTiming information for one tick\n<code>ClockTimer</code> builder structs\nGets a <code>ClockTimer</code> builder\nReturns if this tick was delayed. This tick is considered …\nGet elapsed time since the start of this timer\nGet end time of this timer\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if this tick is past due. This tick is considered …\nGet remaining runtime of this timer\nConvenience function, equivalent to running a …\nGet start time of this timer\nRuns the next tick and returns timing information for it, …\nGet time of this tick\nGet total runtime of this timer, including elapsed time …\nBuilder for <code>ClockTimer</code>.\nBuilds and returns a <code>ClockTimer</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNew builder. You can also obtain a builder through …\nSets a duration to run this ClockTimer for. Internally, …\nSets the end date/time of the ClockTimer. ClockTimer will …\nSets interval to run at, or the time between ticks.\nSets the start date/time of the ClockTimer, or in other …\nReturns a new function that debounces calls to the passed …\nReturns a new function that debounces calls to the passed …\nReturns a new function that debounces calls to the passed …\nReturns a new function that debounces calls to the passed …\nThe main deferring container struct\nRun the deferred code always\nRun the deferred code, based on a condition (<code>bool</code> value) …\nRun the deferred code, based on a more complex condition …\nRun the deferred code only if the thread is not panicking\nRun the deferred code only if the thread is unwinding due …\nDefer some code to run at the end of the current scope\nDefer some code to run at the end of the current scope, …\nDefer some code to run at the end of the current scope, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConsumes and returns an instance of <code>DeferAlways</code> with the …\nConsumes and returns an instance of <code>DeferSuccess</code> with the …\nConsumes and returns an instance of <code>DeferUnwind</code> with the …\nConsumes and returns an instance of <code>DeferRuntime</code> with the …\nConsumes and returns an instance of <code>DeferRuntimeFn</code> with …\nSet if this <code>DeferRuntime</code> should run\nSet if this <code>DeferRuntime</code> should run\nSets the should run value to the provided value, dropping …\nSets the should run value to the provided value, dropping …\nReturns if this <code>DeferRuntime</code> will run\nReturns if this <code>DeferRuntime</code> will run\nTakes a copy of the should run value, if it implements <code>Copy</code>\nTakes a copy of the should run value, if it implements <code>Copy</code>\nReturns a mut reference to the should run value\nReturns a mut reference to the should run value\nReturns a reference to the should run value\nReturns a reference to the should run value\nSwaps the stored should run value with the provided value, …\nSwaps the stored should run value with the provided value, …\nH\nh\nErrors that can be encountered on decoding data (encoding …\nInvalid character. Characters are only allowed to be in <code>0-9</code>…\nInvalid length. Length is expected to be a multiple of two\nLength of encoding table. Not actually used in …\nEncoding table of lowercased characters. Not actually used …\nEncoding table of uppercased characters. Not actually used …\nDecodes a slice of hex bytes into a byte vector. This …\nEncodes a slice of bytes into a String, using lowercase …\nEncodes a slice of bytes into a String, using uppercase …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ncounting from the most significant to least significant …\nReturns the argument unchanged.\nReturns the argument unchanged.\nSafety\nSafety\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1-bit unsigned integer\n10-bit unsigned integer\n102-bit unsigned integer\n11-bit unsigned integer\n12-bit unsigned integer\n128-bit unsigned integer\n13-bit unsigned integer\n14-bit unsigned integer\n15-bit unsigned integer\n16-bit unsigned integer\n17-bit unsigned integer\n18-bit unsigned integer\n19-bit unsigned integer\n2-bit unsigned integer\n20-bit unsigned integer\n21-bit unsigned integer\n22-bit unsigned integer\n23-bit unsigned integer\n24-bit unsigned integer\n25-bit unsigned integer\n26-bit unsigned integer\n27-bit unsigned integer\n28-bit unsigned integer\n29-bit unsigned integer\n3-bit unsigned integer\n30-bit unsigned integer\n31-bit unsigned integer\n32-bit unsigned integer\n39-bit unsigned integer\n4-bit unsigned integer\n44-bit unsigned integer\n47-bit unsigned integer\n5-bit unsigned integer\n6-bit unsigned integer\n64-bit unsigned integer\n7-bit unsigned integer\n79-bit unsigned integer\n8-bit unsigned integer\n83-bit unsigned integer\n9-bit unsigned integer\n97-bit unsigned integer\nAllows any wiwi iter to be borrowed as an std iterator. …\nAllows any std iterator to be borrowed as a wiwi iter. …\nAllows any wiwi iter, or anything capable of converting to …\nAllows any std iterator, or anything capable of converting …\nAn adapter that wraps either a std <code>Iterator</code> or a wiwi <code>Iter</code>…\nIter consumers call <code>size_hint</code>, not <code>size_hint_impl</code>!\nIter for tuples of size 1.\nIter for tuples of size 10.\nIter for tuples of size 100.\nIter for tuples of size 101.\nIter for tuples of size 102.\nIter for tuples of size 103.\nIter for tuples of size 104.\nIter for tuples of size 105.\nIter for tuples of size 106.\nIter for tuples of size 107.\nIter for tuples of size 108.\nIter for tuples of size 109.\nIter for tuples of size 11.\nIter for tuples of size 110.\nIter for tuples of size 111.\nIter for tuples of size 112.\nIter for tuples of size 113.\nIter for tuples of size 114.\nIter for tuples of size 115.\nIter for tuples of size 116.\nIter for tuples of size 117.\nIter for tuples of size 118.\nIter for tuples of size 119.\nIter for tuples of size 12.\nIter for tuples of size 120.\nIter for tuples of size 121.\nIter for tuples of size 122.\nIter for tuples of size 123.\nIter for tuples of size 124.\nIter for tuples of size 125.\nIter for tuples of size 126.\nIter for tuples of size 127.\nIter for tuples of size 128.\nIter for tuples of size 13.\nIter for tuples of size 14.\nIter for tuples of size 15.\nIter for tuples of size 16.\nIter for tuples of size 17.\nIter for tuples of size 18.\nIter for tuples of size 19.\nIter for tuples of size 2.\nIter for tuples of size 20.\nIter for tuples of size 21.\nIter for tuples of size 22.\nIter for tuples of size 23.\nIter for tuples of size 24.\nIter for tuples of size 25.\nIter for tuples of size 26.\nIter for tuples of size 27.\nIter for tuples of size 28.\nIter for tuples of size 29.\nIter for tuples of size 3.\nIter for tuples of size 30.\nIter for tuples of size 31.\nIter for tuples of size 32.\nIter for tuples of size 33.\nIter for tuples of size 34.\nIter for tuples of size 35.\nIter for tuples of size 36.\nIter for tuples of size 37.\nIter for tuples of size 38.\nIter for tuples of size 39.\nIter for tuples of size 4.\nIter for tuples of size 40.\nIter for tuples of size 41.\nIter for tuples of size 42.\nIter for tuples of size 43.\nIter for tuples of size 44.\nIter for tuples of size 45.\nIter for tuples of size 46.\nIter for tuples of size 47.\nIter for tuples of size 48.\nIter for tuples of size 49.\nIter for tuples of size 5.\nIter for tuples of size 50.\nIter for tuples of size 51.\nIter for tuples of size 52.\nIter for tuples of size 53.\nIter for tuples of size 54.\nIter for tuples of size 55.\nIter for tuples of size 56.\nIter for tuples of size 57.\nIter for tuples of size 58.\nIter for tuples of size 59.\nIter for tuples of size 6.\nIter for tuples of size 60.\nIter for tuples of size 61.\nIter for tuples of size 62.\nIter for tuples of size 63.\nIter for tuples of size 64.\nIter for tuples of size 65.\nIter for tuples of size 66.\nIter for tuples of size 67.\nIter for tuples of size 68.\nIter for tuples of size 69.\nIter for tuples of size 7.\nIter for tuples of size 70.\nIter for tuples of size 71.\nIter for tuples of size 72.\nIter for tuples of size 73.\nIter for tuples of size 74.\nIter for tuples of size 75.\nIter for tuples of size 76.\nIter for tuples of size 77.\nIter for tuples of size 78.\nIter for tuples of size 79.\nIter for tuples of size 8.\nIter for tuples of size 80.\nIter for tuples of size 81.\nIter for tuples of size 82.\nIter for tuples of size 83.\nIter for tuples of size 84.\nIter for tuples of size 85.\nIter for tuples of size 86.\nIter for tuples of size 87.\nIter for tuples of size 88.\nIter for tuples of size 89.\nIter for tuples of size 9.\nIter for tuples of size 90.\nIter for tuples of size 91.\nIter for tuples of size 92.\nIter for tuples of size 93.\nIter for tuples of size 94.\nIter for tuples of size 95.\nIter for tuples of size 96.\nIter for tuples of size 97.\nIter for tuples of size 98.\nIter for tuples of size 99.\nBorrow the std iterator as a wiwi iter.\nBorrow the wiwi iter as an std iterator.\nConverts the std iterator into a wiwi iter.\nConverts the wiwi iter into a std iterator.\nConsumes the iter and returns the number of items that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code> and returns the underlying iter.\nTakes every element emitted by the underlying iter, and …\nSafety\nContains previously initialised value\nA lazily initialised data wrapper that initialises itself …\nReturned by <code>LazyWrap::into_inner</code>, containing the …\nValue is not initialised, contains initialisation function.\nRuns initialisation if the value is not initialised yet, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFetch the value if its initialised, or return the …\nEnsures that the value is initialised, then returns the …\nReturns true or false, depending on if the value is …\nCreates a new uninitialised instance that will be …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait implemented by types that at compile time, for …\nThe memory usage of this type in bytes\nTrait implemented by types that, at compile time, use a …\nCalculate the memory usage of this value in bytes, …\nCalculate the memory usage of the value in bytes, but only …\nFetches the dynamically calculated memory usage of a value.\nFetches the statically known memory usage of a type.\nFetches the statically known memory usage of a value.\nClears the board in place.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNominal wrapper struct\nAsyncronously maps the wrapped value and transmutes the …\nConsumes and asyncronously “map“s the wrapped value …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaps the <code>Some</code> value of an <code>Option</code>, wrapping the resulting …\nMaps the <code>Err</code> value of a <code>Result</code>, wrapping the resulting …\nMaps the <code>Ok</code> value of a <code>Result</code>, wrapping the resulting …\nMaps the wrapped value and transmutes the wrapper type\nConsumes and “map“s the wrapped value into another …\nCreates a nominal struct with the given value\nDeclare a new nominal type (alias), with the provided …\nDeclare many new nominal types (aliases), in a module\nUnwraps and rewraps the value as another nominal type, …\nTranspose a nominal wrapped <code>Result</code> into a <code>Result</code> of a …\nTranspose a nominal wrapped <code>Option</code> into an <code>Option</code> of a …\nUnwraps the nominal struct and returns the value\nGets a mut reference to the wrapped value\nGets a reference to the wrapped value\nAlign of this number type in bytes\nAlign of this number type in bytes, type <code>usize</code>\nAddition\nCarrying addition\nChecked addition\nOverflowing addition\nBitwise AND\nArray conversions\nSize of this number in bits\nSize of this number in bits, type <code>usize</code>\nSize of this number type in bytes\nSize of this number type in bytes, type <code>usize</code>\nCommon base for all numbers\nDivision\nFloating point division\nInteger division\nOverflowing division\nLossless conversion from <code>f32</code>\nPotentially lossy conversion from <code>f32</code>\nLossless conversion from <code>f64</code>\nPotentially lossy conversion from <code>f64</code>\nLossless conversion from <code>i128</code>\nPotentially lossy conversion from <code>i128</code>\nLossless conversion from <code>i16</code>\nPotentially lossy conversion from <code>i16</code>\nLossless conversion from <code>i32</code>\nPotentially lossy conversion from <code>i32</code>\nLossless conversion from <code>i64</code>\nPotentially lossy conversion from <code>i64</code>\nLossless conversion from <code>i8</code>\nPotentially lossy conversion from <code>i8</code>\nLossless conversion from <code>isize</code>\nPotentially lossy conversion from <code>isize</code>\nLossless conversion from <code>u128</code>\nPotentially lossy conversion from <code>u128</code>\nLossless conversion from <code>u16</code>\nPotentially lossy conversion from <code>u16</code>\nLossless conversion from <code>u32</code>\nPotentially lossy conversion from <code>u32</code>\nLossless conversion from <code>u64</code>\nPotentially lossy conversion from <code>u64</code>\nLossless conversion from <code>u8</code>\nPotentially lossy conversion from <code>u8</code>\nLossless conversion from <code>usize</code>\nPotentially lossy conversion from <code>usize</code>\nSigned integers with an unsigned variant\nUnsigned integers with a signed variant\nLossless conversion into <code>f32</code>\nPotentially lossy conversion into <code>f32</code>\nLossless conversion into <code>f64</code>\nPotentially lossy conversion into <code>f64</code>\nLossless conversion into <code>i128</code>\nPotentially lossy conversion into <code>i128</code>\nLossless conversion into <code>i16</code>\nPotentially lossy conversion into <code>i16</code>\nLossless conversion into <code>i32</code>\nPotentially lossy conversion into <code>i32</code>\nLossless conversion into <code>i64</code>\nPotentially lossy conversion into <code>i64</code>\nLossless conversion into <code>i8</code>\nPotentially lossy conversion into <code>i8</code>\nLossless conversion into <code>isize</code>\nPotentially lossy conversion into <code>isize</code>\nLossless conversion into <code>u128</code>\nPotentially lossy conversion into <code>u128</code>\nLossless conversion into <code>u16</code>\nPotentially lossy conversion into <code>u16</code>\nLossless conversion into <code>u32</code>\nPotentially lossy conversion into <code>u32</code>\nLossless conversion into <code>u64</code>\nPotentially lossy conversion into <code>u64</code>\nLossless conversion into <code>u8</code>\nPotentially lossy conversion into <code>u8</code>\nLossless conversion into <code>usize</code>\nPotentially lossy conversion into <code>usize</code>\nMax (finite) value of this number type\nMin (finite) value of this number type\nMultiplication\nOverflowing multiplication\nUnchecked multiplication\nWidening multiplication\nNumbers that can be “chopped in half” to two of …\nNegation\nChecked negation\nBitwise NOT\n<code>1</code>\nBitwise OR\nModulo (the remainder operator)\nLeft shift\nChecked left shift\nRight shift\nChecked right shift\nSubtraction\nBorrowing subtraction\nOverflowing subtraction\nNumbers that can be “widened” to another number type …\nBitwise XOR\n<code>0</code>\nPerforms carrying add\nPerforms carrying add\nPerforms overflowing add\nPerforms plain addition\nPerforms plain addition\nPerforms floating point division\nPerforms floating point division\nPerforms integer division\nPerforms integer division\nPerforms overflowing division\nPerforms regular division\nPerforms regular division\nConverts an array of bytes in big endian order to a number\nLosslessly converts the provided <code>f32</code> into Self\nConverts the provided <code>f32</code> into Self, potentially lossily\nLosslessly converts the provided <code>f64</code> into Self\nConverts the provided <code>f64</code> into Self, potentially lossily\nLosslessly converts the provided <code>i128</code> into Self\nConverts the provided <code>i128</code> into Self, potentially lossily\nLosslessly converts the provided <code>i16</code> into Self\nConverts the provided <code>i16</code> into Self, potentially lossily\nLosslessly converts the provided <code>i32</code> into Self\nConverts the provided <code>i32</code> into Self, potentially lossily\nLosslessly converts the provided <code>i64</code> into Self\nConverts the provided <code>i64</code> into Self, potentially lossily\nLosslessly converts the provided <code>i8</code> into Self\nConverts the provided <code>i8</code> into Self, potentially lossily\nLosslessly converts the provided <code>isize</code> into Self\nConverts the provided <code>isize</code> into Self, potentially lossily\nConverts an array of bytes in little endian order to a …\nConverts an array of bytes in native endian order to a …\nLosslessly converts the provided <code>u128</code> into Self\nConverts the provided <code>u128</code> into Self, potentially lossily\nLosslessly converts the provided <code>u16</code> into Self\nConverts the provided <code>u16</code> into Self, potentially lossily\nLosslessly converts the provided <code>u32</code> into Self\nConverts the provided <code>u32</code> into Self, potentially lossily\nLosslessly converts the provided <code>u64</code> into Self\nConverts the provided <code>u64</code> into Self, potentially lossily\nLosslessly converts the provided <code>u8</code> into Self\nConverts the provided <code>u8</code> into Self, potentially lossily\nLosslessly converts the provided <code>usize</code> into Self\nConverts the provided <code>usize</code> into Self, potentially lossily\nConverts this number into a byte array in big endian order\nLosslessly converts <code>self</code> into <code>f32</code>\nconverts <code>self</code> into <code>f32</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>f64</code>\nconverts <code>self</code> into <code>f64</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>i128</code>\nconverts <code>self</code> into <code>i128</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>i16</code>\nconverts <code>self</code> into <code>i16</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>i32</code>\nconverts <code>self</code> into <code>i32</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>i64</code>\nconverts <code>self</code> into <code>i64</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>i8</code>\nconverts <code>self</code> into <code>i8</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>isize</code>\nconverts <code>self</code> into <code>isize</code>, potentially lossily\nConverts this number into a byte array in little endian …\nConverts this number into a byte array in native endian …\nLosslessly converts <code>self</code> into <code>u128</code>\nconverts <code>self</code> into <code>u128</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>u16</code>\nconverts <code>self</code> into <code>u16</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>u32</code>\nconverts <code>self</code> into <code>u32</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>u64</code>\nconverts <code>self</code> into <code>u64</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>u8</code>\nconverts <code>self</code> into <code>u8</code>, potentially lossily\nLosslessly converts <code>self</code> into <code>usize</code>\nconverts <code>self</code> into <code>usize</code>, potentially lossily\nJoins <code>self</code> with an upper value, to give a widened value\nJoin the narrow lower and upper parts together to get <code>Self</code>\nPerforms overflowing multiplication\nPerforms plain multiplication\nPerforms plain multiplication\nPerforms unchecked multiplication\nPerforms widening multiplication, returning the result in …\nSplits the wide integer into its lower and upper <code>Self</code> parts\nSplits <code>self</code> into its lower and upper narrow parts\nPerforms borrowing subtraction\nPerforms borrowing subtraction\nPerforms overflowing subtraction\nPerforms plain subtraction\nPerforms plain subtraction\nExtend <code>self</code> out into the widened type (without changing …\nExtend <code>Narrow</code> out into <code>Self</code> (without changing its value)\nISO 8601 combined date and time with time zone.\nThe local timescale.\nThe maximum possible <code>DateTime&lt;Utc&gt;</code>.\nThe minimum possible <code>DateTime&lt;Utc&gt;</code>.\nTime duration with nanosecond precision.\nThe Unix Epoch, 1970-01-01 00:00:00 UTC.\nReturns the <code>TimeDelta</code> as an absolute (non-negative) value.\nAdd two <code>TimeDelta</code>s, returning <code>None</code> if overflow occurred.\nAdd a duration in <code>Days</code> to the date part of the <code>DateTime</code>.\nAdds given <code>Months</code> to the current date and time.\nAdds given <code>TimeDelta</code> to the current date and time.\nSubtract two <code>TimeDelta</code>s, returning <code>None</code> if overflow …\nSubtract a duration in <code>Days</code> from the date part of the …\nSubtracts given <code>Months</code> from the current date and time.\nSubtracts given <code>TimeDelta</code> from the current date and time.\nRetrieves the date component with an associated timezone.\nRetrieves the date component.\nMakes a new <code>TimeDelta</code> with the given number of days.\nFix the offset from UTC to its current value, dropping the …\nFormat a <code>TimeDelta</code> using the ISO 8601 format\nFormats the combined date and time per the specified …\nFormats the combined date and time with the specified …\nReturns the argument unchanged.\nConvert this <code>DateTime&lt;FixedOffset&gt;</code> instance into a …\nConvert this <code>DateTime&lt;Local&gt;</code> instance into a <code>DateTime&lt;Utc&gt;</code> …\nReturns the argument unchanged.\nConvert this <code>DateTime&lt;FixedOffset&gt;</code> instance into a …\nConvert this <code>DateTime&lt;Utc&gt;</code> instance into a <code>DateTime&lt;Local&gt;</code> …\nConvert this <code>DateTime&lt;Local&gt;</code> instance into a …\nConvert this <code>DateTime&lt;Utc&gt;</code> instance into a …\nReturns the argument unchanged.\nMakes a new <code>DateTime</code> from a <code>NaiveDateTime</code> in <em>local</em> time …\nMakes a new <code>DateTime</code> from its components: a <code>NaiveDateTime</code> …\nCreates a <code>TimeDelta</code> object from <code>std::time::Duration</code>\nMakes a new <code>DateTime&lt;Utc&gt;</code> from the number of non-leap …\nCreates a new <code>DateTime&lt;Utc&gt;</code> from the number of non-leap …\nMakes a new <code>DateTime&lt;Utc&gt;</code> from the number of non-leap …\nCreates a new <code>DateTime&lt;Utc&gt;</code> from the number of non-leap …\nMakes a new <code>DateTime</code> from its components: a <code>NaiveDateTime</code> …\nMakes a new <code>TimeDelta</code> with the given number of hours.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the <code>TimeDelta</code> equals <code>TimeDelta::zero()</code>.\nThe maximum possible <code>TimeDelta</code>: <code>i64::MAX</code> milliseconds.\nMakes a new <code>TimeDelta</code> with the given number of …\nMakes a new <code>TimeDelta</code> with the given number of …\nThe minimum possible <code>TimeDelta</code>: <code>-i64::MAX</code> milliseconds.\nMakes a new <code>TimeDelta</code> with the given number of minutes.\nReturns a view to the naive local datetime.\nReturns a view to the naive UTC datetime.\nMakes a new <code>TimeDelta</code> with the given number of nanoseconds.\nMakes a new <code>TimeDelta</code> with given number of seconds and …\nReturns a <code>DateTime&lt;Local&gt;</code> which corresponds to the current …\nReturns the total number of whole days in the <code>TimeDelta</code>.\nReturns the total number of whole hours in the <code>TimeDelta</code>.\nReturns the total number of whole microseconds in the …\nReturns the total number of whole milliseconds in the …\nReturns the total number of whole minutes in the <code>TimeDelta</code>.\nReturns the total number of whole nanoseconds in the …\nReturns the total number of whole seconds in the <code>TimeDelta</code>.\nReturns the total number of whole weeks in the <code>TimeDelta</code>.\nRetrieves an associated offset from UTC.\nParses a string from a user-specified format into a …\nParses an RFC 2822 date-and-time string into a …\nParses an RFC 3339 date-and-time string into a …\nParses a string from a user-specified format into a …\nCompare two DateTimes based on their true time, ignoring …\nMakes a new <code>TimeDelta</code> with the given number of seconds.\nSubtracts another <code>DateTime</code> from the current date and time. …\nReturns the number of nanoseconds such that …\nRetrieves the time component.\nReturns the number of non-leap seconds since January 1, …\nReturns the number of non-leap-microseconds since January …\nReturns the number of non-leap-milliseconds since January …\nReturns the number of non-leap-nanoseconds since January …\nReturns the number of non-leap-nanoseconds since January …\nReturns the number of microseconds since the last second …\nReturns the number of milliseconds since the last second …\nReturns the number of nanoseconds since the last second …\nRetrieves an associated time zone.\nReturns an RFC 2822 date and time string such as …\nReturns an RFC 3339 and ISO 8601 date and time string such …\nReturn an RFC 3339 and ISO 8601 date and time string with …\nCreates a <code>std::time::Duration</code> object from a <code>TimeDelta</code>.\nTurn this <code>DateTime</code> into a <code>DateTime&lt;Utc&gt;</code>, dropping the …\nReturns a <code>Date</code> which corresponds to the current date.\nMakes a new <code>TimeDelta</code> with the given number of days.\nMakes a new <code>TimeDelta</code> with the given number of hours.\nMakes a new <code>TimeDelta</code> with the given number of …\nMakes a new <code>TimeDelta</code> with the given number of minutes.\nMakes a new <code>TimeDelta</code> with the given number of seconds.\nMakes a new <code>TimeDelta</code> with the given number of weeks.\nMakes a new <code>TimeDelta</code> with the given number of weeks.\nMakes a new <code>DateTime</code> with the day of month (starting from …\nMakes a new <code>DateTime</code> with the day of month (starting from …\nMakes a new <code>DateTime</code> with the hour number changed.\nMakes a new <code>DateTime</code> with the minute number changed.\nMakes a new <code>DateTime</code> with the month number (starting from …\nMakes a new <code>DateTime</code> with the month number (starting from …\nMakes a new <code>DateTime</code> with nanoseconds since the whole …\nMakes a new <code>DateTime</code> with the day of year (starting from …\nMakes a new <code>DateTime</code> with the day of year (starting from …\nMakes a new <code>DateTime</code> with the second number changed.\nChanges the associated time zone. The returned <code>DateTime</code> …\nMakes a new <code>DateTime</code> with the year number changed, while …\nRetrieve the elapsed years from now to the given <code>DateTime</code>.\nA <code>TimeDelta</code> where the stored seconds and nanoseconds are …\nThe default, global string pool\nTrait implemented by all pools, providing low-level …\nPool’s raw element. Can be anything (that is <code>Sized</code>), but …\nA string, whose contents are stored in a string pool.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBacking pools. Contains the default global pool, as well …\nClones a raw element. The returned raw element should …\nCreates or retrieves a raw element that represents an …\nCreates or retrieves a raw element for a single slice.\nCreates or retrieves a raw element for multiple slices of …\nCreates or retrieves a raw element for a byte vec\nReturns a UTF-8 byte sequence, in a boxed byte array, that …\nReturns a UTF-8 byte sequence, in a byte vec, that the …\nTakes a pool’s raw element and returns the byte slice …\nThe String type\nThe default, global string pool\nTrait implemented by all pools, providing low-level …\nPool’s raw element. Can be anything (that is <code>Sized</code>), but …\nWraps a slice of slices of bytes. This has a simple Hash …\nIterator for <code>SlicesWrap</code> that returns elements in one slice …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClones a raw element. The returned raw element should …\nCreates or retrieves a raw element that represents an …\nCreates or retrieves a raw element for a single slice.\nCreates or retrieves a raw element for multiple slices of …\nCreates or retrieves a raw element for a byte vec\nReturns a UTF-8 byte sequence, in a boxed byte array, that …\nReturns a UTF-8 byte sequence, in a byte vec, that the …\nTakes a pool’s raw element and returns the byte slice …\nJoins the slices in sequence, returning a boxed slice.\nJoins the slices in sequence, returning a vector of bytes.\nA string, whose contents are stored in a string pool.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEncoding/decoding a sudoku board, as well as if a cell is …\nEncoding/decoding a sudoku board, without specifying if a …\nSafety\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nExecutes code with cloned values, so the executed code can …\nOne frame of this many bytes (4) from the binary data maps …\nErrors that can be encountered on decoding data (encoding …\nOne frame of data contains characters that are too large …\nInvalid character in input data\nInput data has invalid length\nOne frame of this many bytes (5) from the encoded Z85 data …\nTable to map any byte to Option of a number 0-84.\nLength of the decoding table\nTable to map a number 0-84 to a Z85 character.\nLength of the encoding table (ie. number of different …\nDecodes a slice of a Z85 string back into the source bytes\nEncodes a slice of bytes into a Z85 string, adding padding …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")